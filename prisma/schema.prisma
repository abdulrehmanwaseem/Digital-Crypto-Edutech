// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum EnrollmentStatus {
  ACTIVE
  COMPLETED
  CANCELLED
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  referralCode  String?   @unique
  referredBy    String?
  enrollments   Enrollment[]
  profile       Profile?
  referralStats ReferralStats?
}

model Profile {
  id          String    @id @default(cuid())
  userId      String    @unique
  user        User      @relation(fields: [userId], references: [id])
  avatar      String?
  bio         String?
  phoneNumber String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Plan {
  id          String    @id @default(cuid())
  name        String
  description String
  price       Float
  duration    Int       // in days
  features    String[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  enrollments Enrollment[]
  courses     Course[]
}

model Course {
  id          String    @id @default(cuid())
  title       String
  description String
  content     String
  planId      String
  plan        Plan      @relation(fields: [planId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Enrollment {
  id        String    @id @default(cuid())
  userId    String
  planId    String
  user      User      @relation(fields: [userId], references: [id])
  plan      Plan      @relation(fields: [planId], references: [id])
  startDate DateTime  @default(now())
  endDate   DateTime
  status    EnrollmentStatus @default(ACTIVE)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model ReferralStats {
  id             String   @id @default(cuid())
  userId         String   @unique
  user           User     @relation(fields: [userId], references: [id])
  totalReferrals Int     @default(0)
  activeReferrals Int    @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model ContactMessage {
  id        String    @id @default(cuid())
  name      String
  email     String
  subject   String
  message   String
  createdAt DateTime  @default(now())
}
